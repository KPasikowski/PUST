function [ y, u, E, yzad ] = policzPID( Kp_, Ti_, Td_, Kk_, nrZad)
Kp = Kp_;
Ti = Ti_;
Td = Td_;


Kk = Kk_;
Tp = 0.5;

r2 = (Kp * Td) / Tp ;
r1 = Kp * ( (Tp/(2*Ti)) - 2*(Td/Tp) - 1 ) ;
r0 = Kp * ( 1 + Tp/(2*Ti) + Td/Tp ) ;

% warunki poczatkowe
u(1:11) = 0 ;
y(1:11) = 0 ;
e(1:11) = 0 ;
index = 1;
yzads = [1.05 0.8 1.1 0.9];
yzad = yzads(index);
yzadVec(1:Kk) = yzad;


% glowna petla symulacji
for k = 12 : Kk
    if mod(k,200) == 0
        index = index + 1;
        if index > length(yzads)
            index = length(yzads);
        end
        yzad = yzads(index);
    end
    yzadVec(k) = yzad;

    y(k)=symulacja_obiektu6y1(u1(k-6),u1(k-7),u2(k-3),u2(k-4),y1(k-1),y1(k-2));

    
    e1(k) = yzad1 - y1(k) ;
    
    if config == 1
        u1(k) = r2_1 * e1(k-2) + r1_1 * e1(k-1) + r0_1 * e1(k) + u1(k-1) ;
        u2(k) = r2_2 * e2(k-2) + r1_2 * e2(k-1) + r0_2 * e2(k) + u2(k-1) ;
    else
        u1(k) = r2_1 * e2(k-2) + r1_1 * e2(k-1) + r0_1 * e2(k) + u1(k-1) ;
        u2(k) = r2_2 * e1(k-2) + r1_2 * e1(k-1) + r0_2 * e1(k) + u2(k-1) ;
    end

end

E1 = (yzadVec1 - y1) * (yzadVec1 - y1)';
E2 = (yzadVec2 - y2) * (yzadVec2 - y2)';
E = E1 + E2;

yzad = zeros(2, Kk);
yzad(1, :) = yzadVec1;
yzad(2, :) = yzadVec2;

y = zeros(2, Kk);
y(1, :) = y1;
y(2, :) = y2;

u = zeros(2, Kk);
u(1, :) = u1;
u(2, :) = u2;

end

